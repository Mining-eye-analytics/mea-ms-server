# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SetPolygonPointsRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, polygon: List[List[int]]=None, outside_secure_area: bool=None, object_perimeter: List[str]=None):  # noqa: E501
        """SetPolygonPointsRequest - a model defined in Swagger

        :param polygon: The polygon of this SetPolygonPointsRequest.  # noqa: E501
        :type polygon: List[List[int]]
        :param outside_secure_area: The outside_secure_area of this SetPolygonPointsRequest.  # noqa: E501
        :type outside_secure_area: bool
        :param object_perimeter: The object_perimeter of this SetPolygonPointsRequest.  # noqa: E501
        :type object_perimeter: List[str]
        """
        self.swagger_types = {
            'polygon': List[List[int]],
            'outside_secure_area': bool,
            'object_perimeter': List[str]
        }

        self.attribute_map = {
            'polygon': 'polygon',
            'outside_secure_area': 'outside_secure_area',
            'object_perimeter': 'object_perimeter'
        }

        self._polygon = polygon
        self._outside_secure_area = outside_secure_area
        self._object_perimeter = object_perimeter

    @classmethod
    def from_dict(cls, dikt) -> 'SetPolygonPointsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SetPolygonPointsRequest of this SetPolygonPointsRequest.  # noqa: E501
        :rtype: SetPolygonPointsRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def polygon(self) -> List[List[int]]:
        """Gets the polygon of this SetPolygonPointsRequest.


        :return: The polygon of this SetPolygonPointsRequest.
        :rtype: List[List[int]]
        """
        return self._polygon

    @polygon.setter
    def polygon(self, polygon: List[List[int]]):
        """Sets the polygon of this SetPolygonPointsRequest.


        :param polygon: The polygon of this SetPolygonPointsRequest.
        :type polygon: List[List[int]]
        """
        if polygon is None:
            raise ValueError("Invalid value for `polygon`, must not be `None`")  # noqa: E501

        self._polygon = polygon

    @property
    def outside_secure_area(self) -> bool:
        """Gets the outside_secure_area of this SetPolygonPointsRequest.


        :return: The outside_secure_area of this SetPolygonPointsRequest.
        :rtype: bool
        """
        return self._outside_secure_area

    @outside_secure_area.setter
    def outside_secure_area(self, outside_secure_area: bool):
        """Sets the outside_secure_area of this SetPolygonPointsRequest.


        :param outside_secure_area: The outside_secure_area of this SetPolygonPointsRequest.
        :type outside_secure_area: bool
        """
        if outside_secure_area is None:
            raise ValueError("Invalid value for `outside_secure_area`, must not be `None`")  # noqa: E501

        self._outside_secure_area = outside_secure_area

    @property
    def object_perimeter(self) -> List[str]:
        """Gets the object_perimeter of this SetPolygonPointsRequest.


        :return: The object_perimeter of this SetPolygonPointsRequest.
        :rtype: List[str]
        """
        return self._object_perimeter

    @object_perimeter.setter
    def object_perimeter(self, object_perimeter: List[str]):
        """Sets the object_perimeter of this SetPolygonPointsRequest.


        :param object_perimeter: The object_perimeter of this SetPolygonPointsRequest.
        :type object_perimeter: List[str]
        """
        if object_perimeter is None:
            raise ValueError("Invalid value for `object_perimeter`, must not be `None`")  # noqa: E501

        self._object_perimeter = object_perimeter
